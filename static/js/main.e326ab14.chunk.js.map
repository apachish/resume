{"version":3,"sources":["components/Changecolor.js","components/Menu.js","components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["changeColor","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","react_default","a","createElement","className","onClick","props","randomColor","src","data","image","title","Component","Menu","id","navigation","map","nav","modules","activeClass","to","link","spy","smooth","offset","duration","delay","style","Changecolor","Fullpage","backgroundColor","console","log","children","concat","lib_default","snowColor","DownIcon","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","icon","TitlesSection","src_components_Fullpage","subtitle","keys","links","key","react_social_icons","url","components_DownIcon","icons","down","name","AboutSection","sections","items","p","content","SkillCard","skill","SkillSection","eachSkill","src_components_SkillCard","App","bind","assertThisInitialized","letters","colory","backgroundColory","snowColory","i","Math","floor","random","setState","components_Menu","src_sections_TitlesSection","src_sections_AboutSection","src_sections_SkillSection","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e326ab14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport data from \"../data.json\";\nimport App from \"../App.js\";\n\nclass changeColor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: \"white\"\n    };\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"color\" onClick={this.props.randomColor}>\n          <img src={data.changeColor.image} />\n          <div className=\"title-color\">{data.changeColor.title}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default changeColor;\n","import React, { Component } from \"react\";\nimport { Link, Element } from \"react-scroll\";\nimport Changecolor from \"../components/Changecolor\";\n\nimport data from \"../data.json\";\n\nimport \"./menu.css\";\n\nclass Menu extends Component {\n  constructor() {\n    super();\n  }\n  render() {\n    const color = this.props.color\n    return (\n      <header>\n        <nav id=\"desktop-nav\">\n          <ul>\n          {data.navigation.map(nav => {\n            return (\n              <li>\n                <Link\n          activeClass=\"active\"\n          to={nav.link}\n          spy={true}\n          smooth={true}\n          offset={0}\n          duration={500}\n          delay={0}\n          style={{\n            color: color\n          }}\n        >\n                {nav.title}\n                </Link>\n            </li>\n            );\n          })}\n          </ul>\n        </nav>\n        <Changecolor randomColor={this.props.randomColor}/>\n      </header>\n    );\n  }\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport SnowStorm from 'react-snowstorm';\n\nimport './Fullpage.css'\n\nclass Fullpage extends Component {\n    render() {\n        const backgroundColor = this.props.backgroundColor;\n        console.log(backgroundColor);\n        const { children } = this.props\n        return (\n            <div className={`fullpage ${this.props.className || ''}`} style={{\n                backgroundColor: backgroundColor\n              }}>\n            \t\t\t\t<SnowStorm snowColor={this.props.snowColor} />\n\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default Fullpage","import React, {Component} from \"react\";\n\nconst DownIcon = (props) => {\n    return (\n        <div\n        onClick={props.onClick}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: \"-34px\",\n          transform: \"translateY(-45px)\"\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"30px\"\n          }}\n        >\n          <img src={props.icon} />\n        </div>\n      </div>\n    )\n}\n\nexport default DownIcon","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./TitlesSection.css\";\nimport DownIcon from \"../components/DownIcon\";\nimport { Link, Element } from \"react-scroll\";\n\nclass TitlesSection extends Component {\n  constructor() {\n    super();\n  \n    // this.changeColor = this.changeColor.bind(this);\n  }\n\n  // changeColor() {\n  //   this.setState({\n  //     color: this.state.color === \"white\" ? \"yellow\" : \"white\"\n  //   });\n  // }\n  \n  render() {\n    const color = this.props.color\n    const backgroundColor = this.props.backgroundColor\n    const snowColor = this.props.snowColor\n    return (\n      <div>\n        <Fullpage className=\"first\" backgroundColor={backgroundColor} snowColor={snowColor}>\n          <h1\n            className=\"title\"\n            style={{\n              color: color\n            }}\n            // onMouseOver={this.changeColor}\n            // onMouseLeave={() => {\n            //   this.changeColor();\n            // }}\n          >\n            {data.title}\n          </h1>\n          <div>\n            <h2\n            style={{\n              color: color\n            }}\n            >{data.subtitle}</h2>\n          </div>\n          <div className=\"icons-wrapper\">\n            {Object.keys(data.links).map(key => {\n              return (\n                <div className=\"icon\">\n                  <SocialIcon url={data.links[key]} />\n                </div>\n              );\n            })}\n          </div>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          smooth={true}\n          offset={0}\n          duration={500}\n          delay={0}\n        >\n          <DownIcon\n            icon={data.icons.down}\n            onClick={() => console.log(\"im working\")}\n          />\n        </Link>\n        <Element name=\"about\" className=\"element\" />\n      </div>\n    );\n  }\n}\n\nexport default TitlesSection;","import React, { Component } from \"react\";\nimport { Link, Element } from \"react-scroll\";\n\nimport Fullpage from \"../components/Fullpage\";\n\nimport data from \"../data.json\";\nimport \"./AboutSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    const color = this.props.color\n    const backgroundColor = this.props.backgroundColor\n    const snowColor = this.props.snowColor\n\n    return (\n      <div>\n        <Fullpage className=\"second\" backgroundColor={backgroundColor} snowColor={snowColor}>\n          <h3 \n          style={{\n            color: color\n          }}\n          >{data.sections[0].title}</h3>\n          <div\n          style={{\n            color: color\n          }}\n          >\n            {data.sections[0].items.map(p => {\n              return <p>{p.content}</p>;\n            })}\n          </div>\n        </Fullpage>\n        <Element name=\"skill\" className=\"element\" />\n      </div>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport SkillCard from \"../components/SkillCard\";\n\nimport \"./SkillSection.css\";\n\nclass SkillSection extends Component {\n  render() {\n    const backgroundColor = this.props.backgroundColor;\n        const snowColor = this.props.snowColor\n\n    return (\n      <Fullpage className=\"third\" backgroundColor={backgroundColor} snowColor={snowColor}>\n        <h3>{data.sections[1].title}</h3>\n        <div\n          className=\"cards-wrapper\"\n          \n        >\n          {data.sections[1].items.map(eachSkill => {\n            return <SkillCard skill={eachSkill} />;\n          })}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default SkillSection;\n","import React, { Component } from \"react\";\nimport Menu from './components/Menu';\nimport TitlesSection from './sections/TitlesSection';\nimport AboutSection from './sections/AboutSection';\nimport SkillSection from './sections/SkillSection';\nimport propTypes from \"prop-types\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      color: \"white\",\n      backgroundColor : \"black\",\n      snowColor : \"red\"\n    };\n    this.randomColor = this.randomColor.bind(this);\n\n  }\n  randomColor() {\n      \n    var letters = \"0123456789ABCDEF\";\n    var colory = \"#\";\n    var backgroundColory = \"#\"\n    var snowColory = \"#\"\n    for (var i = 0; i < 6; i++) {\n      colory += letters[Math.floor(Math.random() * 16)];\n      backgroundColory += letters[Math.floor(Math.random() * 16)];\n      snowColory += letters[Math.floor(Math.random() * 16)];\n    }\n    console.log(backgroundColory)\n    this.setState({\n      color:colory,\n      backgroundColor:backgroundColory,\n      snowColor:  snowColory\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\" >\n        <Menu color={this.state.color} randomColor={this.randomColor}/>\n        <TitlesSection color={this.state.color} backgroundColor={this.state.backgroundColor} snowColor={this.state.snowColor}/>\n        <AboutSection color={this.state.color} backgroundColor={this.state.backgroundColor} snowColor={this.state.snowColor}/>\n        <SkillSection color={this.state.color} backgroundColor={this.state.backgroundColor} snowColor={this.state.snowColor}/>\n      </div>\n    );\n  }\n}\nApp.propTypes = {\n  color: propTypes.string.isRequired\n};\nApp.defaultProps ={\n  color:\"white\",\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}